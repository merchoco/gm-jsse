package cn.gmssl.security.util;

import java.util.ListResourceBundle;

public class Resources_de extends ListResourceBundle {
   private static final Object[][] contents = new Object[][]{{"SPACE", " "}, {"2SPACE", "  "}, {"6SPACE", "      "}, {"COMMA", ", "}, {"NEWLINE", "\n"}, {"STAR", "*******************************************"}, {"STARNN", "*******************************************\n\n"}, {".OPTION.", " [Option]..."}, {"Options.", "Optionen:"}, {"Use.keytool.help.for.all.available.commands", "\"keytool -help\" für alle verfügbaren Befehle verwenden"}, {"Key.and.Certificate.Management.Tool", "Schlüssel- und Zertifikatsverwaltungstool"}, {"Commands.", "Befehle:"}, {"Use.keytool.command.name.help.for.usage.of.command.name", "\"keytool -command_name -help\" für Verwendung von command_name verwenden"}, {"Generates.a.certificate.request", "Generiert eine Zertifikatanforderung"}, {"Changes.an.entry.s.alias", "Ändert den Alias eines Eintrags"}, {"Deletes.an.entry", "Löscht einen Eintrag"}, {"Exports.certificate", "Exportiert ein Zertifikat"}, {"Generates.a.key.pair", "Generiert ein Schlüsselpaar"}, {"Generates.a.secret.key", "Generiert einen Secret Key"}, {"Generates.certificate.from.a.certificate.request", "Generiert ein Zertifikat aus einer Zertifikatanforderung"}, {"Generates.CRL", "Generiert eine CRL"}, {"Imports.entries.from.a.JDK.1.1.x.style.identity.database", "Importiert Einträge aus einer Identity-Datenbank im JDK 1.1.x-Stil"}, {"Imports.a.certificate.or.a.certificate.chain", "Importiert ein Zertifikat oder eine Zertifikatkette"}, {"Imports.one.or.all.entries.from.another.keystore", "Importiert einen oder alle Einträge aus einem anderen Keystore"}, {"Clones.a.key.entry", "Clont einen Schlüsseleintrag"}, {"Changes.the.key.password.of.an.entry", "Ändert das Schlüsselkennwort eines Eintrags"}, {"Lists.entries.in.a.keystore", "Listet die Einträge in einem Keystore auf"}, {"Prints.the.content.of.a.certificate", "Druckt den Content eines Zertifikats"}, {"Prints.the.content.of.a.certificate.request", "Druckt den Content einer Zertifikatanforderung"}, {"Prints.the.content.of.a.CRL.file", "Druckt den Content einer CRL-Datei"}, {"Generates.a.self.signed.certificate", "Generiert ein selbst signiertes Zertifikat"}, {"Changes.the.store.password.of.a.keystore", "Ändert das Speicherkennwort eines Keystores"}, {"alias.name.of.the.entry.to.process", "Aliasname des zu verarbeitenden Eintrags"}, {"destination.alias", "Zielalias"}, {"destination.key.password", "Zielschlüssel-Kennwort"}, {"destination.keystore.name", "Ziel-Keystore-Name"}, {"destination.keystore.password.protected", "Ziel-Keystore kennwortgeschützt"}, {"destination.keystore.provider.name", "Ziel-Keystore-Providername"}, {"destination.keystore.password", "Ziel-Keystore-Kennwort"}, {"destination.keystore.type", "Ziel-Keystore-Typ"}, {"distinguished.name", "Distinguished Name"}, {"X.509.extension", "X.509-Erweiterung"}, {"output.file.name", "Ausgabedateiname"}, {"input.file.name", "Eingabedateiname"}, {"key.algorithm.name", "Schlüsselalgorithmusname"}, {"key.password", "Schlüsselkennwort"}, {"key.bit.size", "Schlüsselbitgröße"}, {"keystore.name", "Keystore-Name"}, {"new.password", "Neues Kennwort"}, {"do.not.prompt", "Kein Prompt"}, {"password.through.protected.mechanism", "Kennwort über geschützten Mechanismus"}, {"provider.argument", "Providerargument"}, {"provider.class.name", "Providerklassenname"}, {"provider.name", "Providername"}, {"provider.classpath", "Provider-Classpath"}, {"output.in.RFC.style", "Ausgabe in RFC-Stil"}, {"signature.algorithm.name", "Signaturalgorithmusname"}, {"source.alias", "Quellalias"}, {"source.key.password", "Quellschlüssel-Kennwort"}, {"source.keystore.name", "Quell-Keystore-Name"}, {"source.keystore.password.protected", "Quell-Keystore kennwortgeschützt"}, {"source.keystore.provider.name", "Quell-Keystore-Providername"}, {"source.keystore.password", "Quell-Keystore-Kennwort"}, {"source.keystore.type", "Quell-Keystore-Typ"}, {"SSL.server.host.and.port", "SSL-Serverhost und -port"}, {"signed.jar.file", "Signierte JAR-Datei"}, {"certificate.validity.start.date.time", "Anfangsdatum/-zeit für Zertifikatsgültigkeit"}, {"keystore.password", "Keystore-Kennwort"}, {"keystore.type", "Keystore-Typ"}, {"trust.certificates.from.cacerts", "Zertifikaten aus cacerts vertrauen"}, {"verbose.output", "Verbose-Ausgabe"}, {"validity.number.of.days", "Gültigkeitsdauer (Tage)"}, {"Serial.ID.of.cert.to.revoke", "Serielle ID des zu entziehenden Certs"}, {"keytool.error.", "Keytool-Fehler: "}, {"Illegal.option.", "Ungültige Option:  "}, {"Illegal.value.", "Ungültiger Wert: "}, {"Unknown.password.type.", "Unbekannter Kennworttyp: "}, {"Cannot.find.environment.variable.", "Umgebungsvariable kann nicht gefunden werden: "}, {"Cannot.find.file.", "Datei kann nicht gefunden werden: "}, {"Command.option.flag.needs.an.argument.", "Befehlsoption {0} benötigt ein Argument."}, {"Warning.Different.store.and.key.passwords.not.supported.for.PKCS12.KeyStores.Ignoring.user.specified.command.value.", "Warnung: Keine Unterstützung für unterschiedliche Speicher- und Schlüsselkennwörter bei PKCS12 KeyStores. Der benutzerdefinierte Wert {0} wird ignoriert."}, {".keystore.must.be.NONE.if.storetype.is.{0}", "-keystore muss NONE sein, wenn -storetype {0} ist"}, {"Too.many.retries.program.terminated", "Zu viele erneute Versuche. Programm wird beendet"}, {".storepasswd.and.keypasswd.commands.not.supported.if.storetype.is.{0}", "Befehle -storepasswd und -keypasswd werden nicht unterstützt, wenn -storetype {0} ist"}, {".keypasswd.commands.not.supported.if.storetype.is.PKCS12", "Befehle des Typs -keypasswd werden nicht unterstützt, wenn -storetype PKCS12 ist"}, {".keypass.and.new.can.not.be.specified.if.storetype.is.{0}", "-keypass und -new können nicht angegeben werden, wenn -storetype {0} ist"}, {"if.protected.is.specified.then.storepass.keypass.and.new.must.not.be.specified", "Wenn -protected angegeben ist, dürfen -storepass, -keypass und -new nicht angegeben werden"}, {"if.srcprotected.is.specified.then.srcstorepass.and.srckeypass.must.not.be.specified", "Wenn -srcprotected angegeben ist, dürfen -srcstorepass und -srckeypass nicht angegeben werden"}, {"if.keystore.is.not.password.protected.then.storepass.keypass.and.new.must.not.be.specified", "Wenn der Keystore nicht kennwortgeschützt ist, dürfen -storepass, -keypass und -new nicht angegeben werden"}, {"if.source.keystore.is.not.password.protected.then.srcstorepass.and.srckeypass.must.not.be.specified", "Wenn der Quell-Keystore nicht kennwortgeschützt ist, dürfen -srcstorepass und -srckeypass nicht angegeben werden"}, {"Illegal.startdate.value", "Ungültiger Wert für Anfangsdatum"}, {"Validity.must.be.greater.than.zero", "Gültigkeit muss größer als null sein"}, {"provName.not.a.provider", "{0} kein Provider"}, {"Usage.error.no.command.provided", "Verwendungsfehler: Kein Befehl angegeben"}, {"Source.keystore.file.exists.but.is.empty.", "Quell-Keystore-Datei ist zwar vorhanden, ist aber leer: "}, {"Please.specify.srckeystore", "Geben Sie -srckeystore an"}, {"Must.not.specify.both.v.and.rfc.with.list.command", "-v und -rfc dürfen bei Befehl \"list\" nicht beide angegeben werden"}, {"Key.password.must.be.at.least.6.characters", "Schlüsselkennwort muss mindestens sechs Zeichen lang sein"}, {"New.password.must.be.at.least.6.characters", "Neues Kennwort muss mindestens sechs Zeichen lang sein"}, {"Keystore.file.exists.but.is.empty.", "Keystore-Datei ist vorhanden, ist aber leer: "}, {"Keystore.file.does.not.exist.", "Keystore-Datei ist nicht vorhanden: "}, {"Must.specify.destination.alias", "Sie müssen einen Zielalias angeben"}, {"Must.specify.alias", "Sie müssen einen Alias angeben"}, {"Keystore.password.must.be.at.least.6.characters", "Keystore-Kennwort muss mindestens sechs Zeichen lang sein"}, {"Enter.keystore.password.", "Keystore-Kennwort eingeben:  "}, {"Enter.source.keystore.password.", "Quell-Keystore-Kennwort eingeben:  "}, {"Enter.destination.keystore.password.", "Ziel-Keystore-Kennwort eingeben:  "}, {"Keystore.password.is.too.short.must.be.at.least.6.characters", "Keystore-Kennwort ist zu kurz. Es muss mindestens sechs Zeichen lang sein"}, {"Unknown.Entry.Type", "Unbekannter Eintragstyp"}, {"Too.many.failures.Alias.not.changed", "Zu viele Fehler. Alias nicht geändert"}, {"Entry.for.alias.alias.successfully.imported.", "Eintrag für Alias {0} erfolgreich importiert."}, {"Entry.for.alias.alias.not.imported.", "Eintrag für Alias {0} nicht importiert."}, {"Problem.importing.entry.for.alias.alias.exception.Entry.for.alias.alias.not.imported.", "Problem beim Importieren des Eintrags für Alias {0}: {1}.\nEintrag für Alias {0} nicht importiert."}, {"Import.command.completed.ok.entries.successfully.imported.fail.entries.failed.or.cancelled", "Importbefehl abgeschlossen: {0} Einträge erfolgreich importiert, {1} Einträge nicht erfolgreich oder abgebrochen"}, {"Warning.Overwriting.existing.alias.alias.in.destination.keystore", "Warnung: Vorhandener Alias {0} in Ziel-Keystore wird überschrieben"}, {"Existing.entry.alias.alias.exists.overwrite.no.", "Eintragsalias {0} ist bereits vorhanden. Überschreiben? [Nein]:  "}, {"Too.many.failures.try.later", "Zu viele Fehler. Versuchen Sie es später erneut"}, {"Certification.request.stored.in.file.filename.", "Zertifizierungsanforderung in Datei <{0}> gespeichert"}, {"Submit.this.to.your.CA", "Leiten Sie dies an die CA weiter"}, {"if.alias.not.specified.destalias.srckeypass.and.destkeypass.must.not.be.specified", "Wenn kein Alias angegeben ist, dürfen destalias, srckeypass und destkeypass nicht angegeben werden"}, {"Certificate.stored.in.file.filename.", "Zertifikat in Datei <{0}> gespeichert"}, {"Certificate.reply.was.installed.in.keystore", "Zertifikatantwort wurde in Keystore installiert"}, {"Certificate.reply.was.not.installed.in.keystore", "Zertifikatantwort wurde nicht in Keystore installiert"}, {"Certificate.was.added.to.keystore", "Zertifikat wurde Keystore hinzugefügt"}, {"Certificate.was.not.added.to.keystore", "Zertifikat wurde nicht zu Keystore hinzugefügt"}, {".Storing.ksfname.", "[{0} wird gesichert]"}, {"alias.has.no.public.key.certificate.", "{0} hat keinen Public Key (Zertifikat)"}, {"Cannot.derive.signature.algorithm", "Signaturalgorithmus kann nicht abgeleitet werden"}, {"Alias.alias.does.not.exist", "Alias <{0}> ist nicht vorhanden"}, {"Alias.alias.has.no.certificate", "Alias <{0}> hat kein Zertifikat"}, {"Key.pair.not.generated.alias.alias.already.exists", "Schlüsselpaar wurde nicht generiert. Alias <{0}> ist bereits vorhanden"}, {"Generating.keysize.bit.keyAlgName.key.pair.and.self.signed.certificate.sigAlgName.with.a.validity.of.validality.days.for", "Generieren von Schlüsselpaar (Typ {1}, {0} Bit) und selbst signiertem Zertifikat ({2}) mit einer Gültigkeit von {3} Tagen\n\tfür: {4}"}, {"Enter.key.password.for.alias.", "Schlüsselkennwort für <{0}> eingeben"}, {".RETURN.if.same.as.keystore.password.", "\t(RETURN, wenn identisch mit Keystore-Kennwort):  "}, {"Key.password.is.too.short.must.be.at.least.6.characters", "Schlüsselkennwort ist zu kurz. Es muss mindestens sechs Zeichen lang sein"}, {"Too.many.failures.key.not.added.to.keystore", "Zu viele Fehler. Schlüssel wurde nicht zu Keystore hinzugefügt"}, {"Destination.alias.dest.already.exists", "Zielalias <{0}> bereits vorhanden"}, {"Password.is.too.short.must.be.at.least.6.characters", "Kennwort ist zu kurz. Es muss mindestens sechs Zeichen lang sein"}, {"Too.many.failures.Key.entry.not.cloned", "Zu viele Fehler. Schlüsseleintrag wurde nicht geclont"}, {"key.password.for.alias.", "Schlüsselkennwort für <{0}>"}, {"Keystore.entry.for.id.getName.already.exists", "Keystore-Eintrag für <{0}> bereits vorhanden"}, {"Creating.keystore.entry.for.id.getName.", "Keystore-Eintrag für <{0}> wird erstellt..."}, {"No.entries.from.identity.database.added", "Keine Einträge aus Identity-Datenbank hinzugefügt"}, {"Alias.name.alias", "Aliasname: {0}"}, {"Creation.date.keyStore.getCreationDate.alias.", "Erstellungsdatum: {0,date}"}, {"alias.keyStore.getCreationDate.alias.", "{0}, {1,date}, "}, {"alias.", "{0}, "}, {"Entry.type.type.", "Eintragstyp: {0}"}, {"Certificate.chain.length.", "Zertifikatkettenlänge: "}, {"Certificate.i.1.", "Zertifikat[{0,number,integer}]:"}, {"Certificate.fingerprint.SHA1.", "Zertifikat-Fingerprint (SHA1): "}, {"Keystore.type.", "Keystore-Typ: "}, {"Keystore.provider.", "Keystore-Provider: "}, {"Your.keystore.contains.keyStore.size.entry", "Keystore enthält {0,number,integer} Eintrag"}, {"Your.keystore.contains.keyStore.size.entries", "Keystore enthält {0,number,integer} Einträge"}, {"Failed.to.parse.input", "Eingabe konnte nicht geparst werden"}, {"Empty.input", "Leere Eingabe"}, {"Not.X.509.certificate", "Kein X.509-Zertifikat"}, {"alias.has.no.public.key", "{0} hat keinen Public Key"}, {"alias.has.no.X.509.certificate", "{0} hat kein X.509-Zertifikat"}, {"New.certificate.self.signed.", "Neues Zertifikat (selbst signiert):"}, {"Reply.has.no.certificates", "Antwort hat keine Zertifikate"}, {"Certificate.not.imported.alias.alias.already.exists", "Zertifikat nicht importiert. Alias <{0}> ist bereits vorhanden"}, {"Input.not.an.X.509.certificate", "Eingabe kein X.509-Zertifikat"}, {"Certificate.already.exists.in.keystore.under.alias.trustalias.", "Zertifikat ist bereits unter Alias <{0}> im Keystore vorhanden"}, {"Do.you.still.want.to.add.it.no.", "Möchten Sie es trotzdem hinzufügen? [Nein]:  "}, {"Certificate.already.exists.in.system.wide.CA.keystore.under.alias.trustalias.", "Zertifikat ist bereits unter Alias <{0}> im systemweiten CA-Keystore vorhanden"}, {"Do.you.still.want.to.add.it.to.your.own.keystore.no.", "Möchten Sie es trotzdem zu Ihrem eigenen Keystore hinzufügen? [Nein]:  "}, {"Trust.this.certificate.no.", "Diesem Zertifikat vertrauen? [Nein]:  "}, {"YES", "Ja"}, {"New.prompt.", "Neues {0}: "}, {"Passwords.must.differ", "Kennwörter müssen sich unterscheiden"}, {"Re.enter.new.prompt.", "Neues {0} erneut eingeben: "}, {"Re.enter.new.password.", "Neues Kennwort erneut eingeben: "}, {"They.don.t.match.Try.again", "Keine Übereinstimmung. Wiederholen Sie den Vorgang"}, {"Enter.prompt.alias.name.", "{0}-Aliasnamen eingeben:  "}, {"Enter.new.alias.name.RETURN.to.cancel.import.for.this.entry.", "Geben Sie einen neuen Aliasnamen ein\t(RETURN, um den Import dieses Eintrags abzubrechen):  "}, {"Enter.alias.name.", "Aliasnamen eingeben:  "}, {".RETURN.if.same.as.for.otherAlias.", "\t(RETURN, wenn identisch mit <{0}>)"}, {".PATTERN.printX509Cert", "Eigentümer: {0}\nAussteller: {1}\nSeriennummer: {2}\nGültig von: {3} bis: {4}\nZertifikat-Fingerprints:\n\t MD5:  {5}\n\t SHA1: {6}\n\t SHA256: {7}\n\t Signaturalgorithmusname: {8}\n\t Version: {9}"}, {"What.is.your.first.and.last.name.", "Wie lautet Ihr Vor- und Nachname?"}, {"What.is.the.name.of.your.organizational.unit.", "Wie lautet der Name Ihrer organisatorischen Einheit?"}, {"What.is.the.name.of.your.organization.", "Wie lautet der Name Ihrer Organisation?"}, {"What.is.the.name.of.your.City.or.Locality.", "Wie lautet der Name Ihrer Stadt oder Gemeinde?"}, {"What.is.the.name.of.your.State.or.Province.", "Wie lautet der Name Ihres Bundeslands?"}, {"What.is.the.two.letter.country.code.for.this.unit.", "Wie lautet der Ländercode (zwei Buchstaben) für diese Einheit?"}, {"Is.name.correct.", "Ist {0} richtig?"}, {"no", "Nein"}, {"yes", "Ja"}, {"y", "J"}, {".defaultValue.", "  [{0}]:  "}, {"Alias.alias.has.no.key", "Alias <{0}> verfügt über keinen Schlüssel"}, {"Alias.alias.references.an.entry.type.that.is.not.a.private.key.entry.The.keyclone.command.only.supports.cloning.of.private.key", "Alias <{0}> verweist auf einen Eintragstyp, der kein Private Key-Eintrag ist. Der Befehl -keyclone unterstützt nur das Clonen von Private Key-Einträgen"}, {".WARNING.WARNING.WARNING.", "*****************  Warnung Warnung Warnung  *****************"}, {"Signer.d.", "Signaturgeber #%d:"}, {"Timestamp.", "Zeitstempel:"}, {"Signature.", "Signatur:"}, {"CRLs.", "CRLs:"}, {"Certificate.owner.", "Zertifikateigentümer: "}, {"Not.a.signed.jar.file", "Keine signierte JAR-Datei"}, {"No.certificate.from.the.SSL.server", "Kein Zertifikat vom SSL-Server"}, {".The.integrity.of.the.information.stored.in.your.keystore.", "* Die Integrität der Informationen, die in Ihrem Keystore gespeichert sind, *\n* wurde NICHT geprüft. Um die Integrität zu prüfen, *\n* müssen Sie Ihr Keystore-Kennwort angeben.                  *"}, {".The.integrity.of.the.information.stored.in.the.srckeystore.", "* Die Integrität der Informationen, die in Ihrem Srckeystore gespeichert sind, *\n* wurde NICHT geprüft. Um die Integrität zu prüfen, *\n* müssen Sie Ihr Srckeystore-Kennwort angeben.                  *"}, {"Certificate.reply.does.not.contain.public.key.for.alias.", "Zertifikatantwort enthält keinen Public Key für <{0}>"}, {"Incomplete.certificate.chain.in.reply", "Unvollständige Zertifikatkette in Antwort"}, {"Certificate.chain.in.reply.does.not.verify.", "Zertifikatkette in Antwort verifiziert nicht: "}, {"Top.level.certificate.in.reply.", "Zertifikat der obersten Ebene in Antwort:\n"}, {".is.not.trusted.", "... ist nicht vertrauenswürdig. "}, {"Install.reply.anyway.no.", "Antwort trotzdem installieren? [Nein]:  "}, {"NO", "Nein"}, {"Public.keys.in.reply.and.keystore.don.t.match", "Public Keys in Antwort und Keystore stimmen nicht überein"}, {"Certificate.reply.and.certificate.in.keystore.are.identical", "Zertifikatantwort und Zertifikat in Keystore sind identisch"}, {"Failed.to.establish.chain.from.reply", "Kette konnte der Antwort nicht entnommen werden"}, {"n", "N"}, {"Wrong.answer.try.again", "Falsche Antwort. Wiederholen Sie den Vorgang"}, {"Secret.key.not.generated.alias.alias.already.exists", "Secret Key wurde nicht generiert. Alias <{0}> ist bereits vorhanden"}, {"Please.provide.keysize.for.secret.key.generation", "Geben Sie -keysize zum Erstellen eines Secret Keys an"}, {"Extensions.", "Erweiterungen: "}, {".Empty.value.", "(Leerer Wert)"}, {"Extension.Request.", "Erweiterungsanforderung:"}, {"PKCS.10.Certificate.Request.Version.1.0.Subject.s.Public.Key.s.format.s.key.", "PKCS #10-Zertifikatanforderung (Version 1.0)\nSubjekt: %s\nPublic Key: %s Format %s Schlüssel\n"}, {"Unknown.keyUsage.type.", "Unbekannter keyUsage-Typ: "}, {"Unknown.extendedkeyUsage.type.", "Unbekannter extendedkeyUsage-Typ: "}, {"Unknown.AccessDescription.type.", "Unbekannter AccessDescription-Typ: "}, {"Unrecognized.GeneralName.type.", "Unbekannter GeneralName-Typ: "}, {"This.extension.cannot.be.marked.as.critical.", "Erweiterung kann nicht als \"Kritisch\" markiert werden. "}, {"Odd.number.of.hex.digits.found.", "Ungerade Anzahl hexadezimaler Ziffern gefunden: "}, {"Unknown.extension.type.", "Unbekannter Erweiterungstyp: "}, {"command.{0}.is.ambiguous.", "Befehl {0} ist mehrdeutig:"}, {"Warning.A.public.key.for.alias.signers.i.does.not.exist.Make.sure.a.KeyStore.is.properly.configured.", "Warnung: Kein Public Key für Alias {0} vorhanden. Vergewissern Sie sich, dass der KeyStore ordnungsgemäß konfiguriert ist."}, {"Warning.Class.not.found.class", "Warnung: Klasse nicht gefunden: {0}"}, {"Warning.Invalid.argument.s.for.constructor.arg", "Warnung: Ungültige(s) Argument(e) für Constructor: {0}"}, {"Illegal.Principal.Type.type", "Ungültiger Principal-Typ: {0}"}, {"Illegal.option.option", "Ungültige Option: {0}"}, {"Usage.policytool.options.", "Verwendung: policytool [Optionen]"}, {".file.file.policy.file.location", " [-file <Datei>]    Policy-Dateiverzeichnis"}, {"New", "Neu"}, {"Open", "Öffnen"}, {"Save", "Speichern"}, {"Save.As", "Speichern unter"}, {"View.Warning.Log", "Warnungslog anzeigen"}, {"Exit", "Beenden"}, {"Add.Policy.Entry", "Policy-Eintrag hinzufügen"}, {"Edit.Policy.Entry", "Policy-Eintrag bearbeiten"}, {"Remove.Policy.Entry", "Policy-Eintrag entfernen"}, {"Edit", "Bearbeiten"}, {"Retain", "Beibehalten"}, {"Warning.File.name.may.include.escaped.backslash.characters.It.is.not.necessary.to.escape.backslash.characters.the.tool.escapes", "Warnung: Möglicherweise enthält der Dateiname Escape-Zeichen mit Backslash. Es ist nicht notwendig, Backslash-Zeichen zu escapen (das Tool führt dies automatisch beim Schreiben des Policy-Contents in den persistenten Speicher aus).\n\nKlicken Sie auf \"Beibehalten\", um den eingegebenen Namen beizubehalten oder auf \"Bearbeiten\", um den Namen zu bearbeiten."}, {"Add.Public.Key.Alias", "Public Key-Alias hinzufügen"}, {"Remove.Public.Key.Alias", "Public Key-Alias entfernen"}, {"File", "Datei"}, {"KeyStore", "KeyStore"}, {"Policy.File.", "Policy-Datei:"}, {"Could.not.open.policy.file.policyFile.e.toString.", "Policy-Datei konnte nicht geöffnet werden: {0}: {1}"}, {"Policy.Tool", "Policy-Tool"}, {"Errors.have.occurred.while.opening.the.policy.configuration.View.the.Warning.Log.for.more.information.", "Beim Öffnen der Policy-Konfiguration sind Fehler aufgetreten. Weitere Informationen finden Sie im Warnungslog."}, {"Error", "Fehler"}, {"OK", "OK"}, {"Status", "Status"}, {"Warning", "Warnung"}, {"Permission.", "Berechtigung:                                                       "}, {"Principal.Type.", "Principal-Typ:"}, {"Principal.Name.", "Principal-Name:"}, {"Target.Name.", "Zielname:                                                    "}, {"Actions.", "Aktionen:                                                             "}, {"OK.to.overwrite.existing.file.filename.", "Vorhandene Datei {0} überschreiben?"}, {"Cancel", "Abbrechen"}, {"CodeBase.", "CodeBase:"}, {"SignedBy.", "SignedBy:"}, {"Add.Principal", "Principal hinzufügen"}, {"Edit.Principal", "Principal bearbeiten"}, {"Remove.Principal", "Principal entfernen"}, {"Principals.", "Principals:"}, {".Add.Permission", "  Berechtigung hinzufügen"}, {".Edit.Permission", "  Berechtigung bearbeiten"}, {"Remove.Permission", "Berechtigung entfernen"}, {"Done", "Fertig"}, {"KeyStore.URL.", "KeyStore-URL:"}, {"KeyStore.Type.", "KeyStore-Typ:"}, {"KeyStore.Provider.", "KeyStore-Provider:"}, {"KeyStore.Password.URL.", "KeyStore-Kennwort-URL:"}, {"Principals", "Principals"}, {".Edit.Principal.", "  Principal bearbeiten:"}, {".Add.New.Principal.", "  Neuen Principal hinzufügen:"}, {"Permissions", "Berechtigungen"}, {".Edit.Permission.", "  Berechtigung bearbeiten:"}, {".Add.New.Permission.", "  Neue Berechtigung hinzufügen:"}, {"Signed.By.", "Signiert von:"}, {"Cannot.Specify.Principal.with.a.Wildcard.Class.without.a.Wildcard.Name", "Principal kann nicht mit einer Platzhalterklasse ohne Platzhalternamen angegeben werden"}, {"Cannot.Specify.Principal.without.a.Name", "Principal kann nicht ohne einen Namen angegeben werden"}, {"Permission.and.Target.Name.must.have.a.value", "Berechtigung und Zielname müssen einen Wert haben"}, {"Remove.this.Policy.Entry.", "Diesen Policy-Eintrag entfernen?"}, {"Overwrite.File", "Datei überschreiben"}, {"Policy.successfully.written.to.filename", "Policy erfolgreich in {0} geschrieben"}, {"null.filename", "Null-Dateiname"}, {"Save.changes.", "Änderungen speichern?"}, {"Yes", "Ja"}, {"No", "Nein"}, {"Policy.Entry", "Policy-Eintrag"}, {"Save.Changes", "Änderungen speichern"}, {"No.Policy.Entry.selected", "Kein Policy-Eintrag ausgewählt"}, {"Unable.to.open.KeyStore.ex.toString.", "KeyStore kann nicht geöffnet werden: {0}"}, {"No.principal.selected", "Kein Principal ausgewählt"}, {"No.permission.selected", "Keine Berechtigung ausgewählt"}, {"name", "Name"}, {"configuration.type", "Konfigurationstyp"}, {"environment.variable.name", "Umgebungsvariablenname"}, {"library.name", "Library-Name"}, {"package.name", "Packagename"}, {"policy.type", "Policy-Typ"}, {"property.name", "Eigenschaftsname"}, {"Principal.List", "Principal-Liste"}, {"Permission.List", "Berechtigungsliste"}, {"Code.Base", "Codebase"}, {"KeyStore.U.R.L.", "KeyStore-URL:"}, {"KeyStore.Password.U.R.L.", "KeyStore-Kennwort-URL:"}, {"invalid.null.input.s.", "Ungültige Nulleingabe(n)"}, {"actions.can.only.be.read.", "Aktionen können nur \"lesen\" sein"}, {"permission.name.name.syntax.invalid.", "Syntax für Berechtigungsnamen [{0}] ungültig: "}, {"Credential.Class.not.followed.by.a.Principal.Class.and.Name", "Nach Zugangsdatenklasse folgt keine Principal-Klasse und kein Name"}, {"Principal.Class.not.followed.by.a.Principal.Name", "Nach Principal-Klasse folgt kein Principal-Name"}, {"Principal.Name.must.be.surrounded.by.quotes", "Principal-Name muss in Anführungszeichen stehen"}, {"Principal.Name.missing.end.quote", "Abschließendes Anführungszeichen für Principal-Name fehlt"}, {"PrivateCredentialPermission.Principal.Class.can.not.be.a.wildcard.value.if.Principal.Name.is.not.a.wildcard.value", "Principal-Klasse PrivateCredentialPermission kann kein Platzhalterwert (*) sein, wenn der Principal-Name kein Platzhalterwert (*) ist"}, {"CredOwner.Principal.Class.class.Principal.Name.name", "CredOwner:\n\tPrincipal-Klasse = {0}\n\tPrincipal-Name = {1}"}, {"provided.null.name", "Nullname angegeben"}, {"provided.null.keyword.map", "Null-Schlüsselwortzuordnung angegeben"}, {"provided.null.OID.map", "Null-OID-Zuordnung angegeben"}, {"invalid.null.AccessControlContext.provided", "Ungültiger Nullwert für AccessControlContext angegeben"}, {"invalid.null.action.provided", "Ungültige Nullaktion angegeben"}, {"invalid.null.Class.provided", "Ungültige Nullklasse angegeben"}, {"Subject.", "Subjekt:\n"}, {".Principal.", "\tPrincipal: "}, {".Public.Credential.", "\tÖffentliche Zugangsdaten: "}, {".Private.Credentials.inaccessible.", "\tKein Zugriff auf private Zugangsdaten\n"}, {".Private.Credential.", "\tPrivate Zugangsdaten: "}, {".Private.Credential.inaccessible.", "\tKein Zugriff auf private Zugangsdaten\n"}, {"Subject.is.read.only", "Subjekt ist schreibgeschützt"}, {"attempting.to.add.an.object.which.is.not.an.instance.of.java.security.Principal.to.a.Subject.s.Principal.Set", "Es wird versucht, ein Objekt hinzuzufügen, das keine Instanz von java.security.Principal für eine Principal-Gruppe eines Subjekts ist"}, {"attempting.to.add.an.object.which.is.not.an.instance.of.class", "Es wird versucht, ein Objekt hinzuzufügen, das keine Instanz von {0} ist"}, {"LoginModuleControlFlag.", "LoginModuleControlFlag: "}, {"Invalid.null.input.name", "Ungültige Nulleingabe: Name"}, {"No.LoginModules.configured.for.name", "Für {0} sind keine LoginModules konfiguriert"}, {"invalid.null.Subject.provided", "Ungültiges Nullsubjekt angegeben"}, {"invalid.null.CallbackHandler.provided", "Ungültiger Nullwert für CallbackHandler angegeben"}, {"null.subject.logout.called.before.login", "Nullsubjekt - Abmeldung vor Anmeldung aufgerufen"}, {"unable.to.instantiate.LoginModule.module.because.it.does.not.provide.a.no.argument.constructor", "LoginModule {0} kann nicht instanziiert werden, da es keinen argumentlosen Constructor angibt"}, {"unable.to.instantiate.LoginModule", "LoginModule kann nicht instanziiert werden"}, {"unable.to.instantiate.LoginModule.", "LoginModule kann nicht instanziiert werden: "}, {"unable.to.find.LoginModule.class.", "LoginModule-Klasse kann nicht gefunden werden: "}, {"unable.to.access.LoginModule.", "Kein Zugriff auf LoginModule möglich: "}, {"Login.Failure.all.modules.ignored", "Anmeldefehler: Alle Module werden ignoriert"}, {"java.security.policy.error.parsing.policy.message", "java.security.policy: Fehler beim Parsen von {0}:\n\t{1}"}, {"java.security.policy.error.adding.Permission.perm.message", "java.security.policy: Fehler beim Hinzufügen von Berechtigung, {0}:\n\t{1}"}, {"java.security.policy.error.adding.Entry.message", "java.security.policy: Fehler beim Hinzufügen von Eintrag:\n\t{0}"}, {"alias.name.not.provided.pe.name.", "Aliasname nicht angegeben ({0})"}, {"unable.to.perform.substitution.on.alias.suffix", "Substitution für Alias {0} kann nicht ausgeführt werden"}, {"substitution.value.prefix.unsupported", "Substitutionswert {0} nicht unterstützt"}, {"LPARAM", "("}, {"RPARAM", ")"}, {"type.can.t.be.null", "Typ kann nicht null sein"}, {"keystorePasswordURL.can.not.be.specified.without.also.specifying.keystore", "keystorePasswordURL kann nicht ohne Keystore angegeben werden"}, {"expected.keystore.type", "Keystore-Typ erwartet"}, {"expected.keystore.provider", "Keystore-Provider erwartet"}, {"multiple.Codebase.expressions", "mehrere Codebase-Ausdrücke"}, {"multiple.SignedBy.expressions", "mehrere SignedBy-Ausdrücke"}, {"SignedBy.has.empty.alias", "Leerer Alias in SignedBy"}, {"can.not.specify.Principal.with.a.wildcard.class.without.a.wildcard.name", "Principal kann nicht mit einer Platzhalterklasse ohne Platzhalternamen angegeben werden"}, {"expected.codeBase.or.SignedBy.or.Principal", "codeBase oder SignedBy oder Principal erwartet"}, {"expected.permission.entry", "Berechtigungseintrag erwartet"}, {"number.", "Nummer "}, {"expected.expect.read.end.of.file.", "[{0}] erwartet, [Dateiende] gelesen"}, {"expected.read.end.of.file.", "[;] erwartet, [Dateiende] gelesen"}, {"line.number.msg", "Zeile {0}: {1}"}, {"line.number.expected.expect.found.actual.", "Zeile {0}: [{1}] erwartet, [{2}] gefunden"}, {"null.principalClass.or.principalName", "principalClass oder principalName null"}, {"PKCS11.Token.providerName.Password.", "Kennwort für PKCS11-Token [{0}]: "}, {"unable.to.instantiate.Subject.based.policy", "Subjektbasierte Policy kann nicht instanziiert werden"}};

   public Object[][] getContents() {
      return contents;
   }
}
